// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Board {
  id          String  @id @default(uuid())
  title       String  @unique
  coverImage  String
  description String
  visibilty   Boolean @default(true)
  author      User    @relation("authoredBoards", fields: [authorId], references: [id])
  authorId    String
  users       User[]  @relation("Members")
  lists       List[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Invites   Invites[]
}

model User {
  id           String  @id @default(uuid())
  userName     String  @unique
  email        String  @unique
  profileImage String
  contriBoards Board[] @relation("Members")

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  myBoards  Board[]   @relation("authoredBoards")
  comments  Comment[]
  Invites   Invites[]
}

model List {
  id   String @id @default(uuid())
  name String @unique
  card Card[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Board     Board?   @relation(fields: [boardId], references: [id])
  boardId   String?
}

model Card {
  id    String @id @default(uuid())
  title String

  list        List         @relation(fields: [listId], references: [id])
  listId      String
  description String
  comments    Comment[]
  attachments Attachment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Attachment {
  id    String @id @default(uuid())
  title String @unique
  path  String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Card      Card?    @relation(fields: [cardId], references: [id])
  cardId    String?
}

model Comment {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  card   Card   @relation(fields: [cardId], references: [id])
  userId String
  cardId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Invites {
  id String @id @default(uuid())

  user      User     @relation(fields: [userId], references: [id])
  board     Board    @relation(fields: [boardId], references: [id])
  createdAt DateTime @default(now())
  userId    String
  boardId   String
}
